// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "proto/demeter/ops/v1alpha/metadata.proto" (package "demeter.ops.v1alpha", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { MetadataService } from "./metadata";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { FetchMetadataResponse } from "./metadata";
import type { FetchMetadataRequest } from "./metadata";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service demeter.ops.v1alpha.MetadataService
 */
export interface IMetadataServiceClient {
    /**
     * @generated from protobuf rpc: FetchMetadata
     */
    fetchMetadata(input: FetchMetadataRequest, options?: RpcOptions): UnaryCall<FetchMetadataRequest, FetchMetadataResponse>;
}
/**
 * @generated from protobuf service demeter.ops.v1alpha.MetadataService
 */
export class MetadataServiceClient implements IMetadataServiceClient, ServiceInfo {
    typeName = MetadataService.typeName;
    methods = MetadataService.methods;
    options = MetadataService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: FetchMetadata
     */
    fetchMetadata(input: FetchMetadataRequest, options?: RpcOptions): UnaryCall<FetchMetadataRequest, FetchMetadataResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<FetchMetadataRequest, FetchMetadataResponse>("unary", this._transport, method, opt, input);
    }
}
