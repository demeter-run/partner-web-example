/**
 * @fileoverview gRPC-Web generated client stub for demeter.ops.v1alpha
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v0.0.0
// source: proto/demeter/ops/v1alpha/project.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as proto_demeter_ops_v1alpha_project_pb from '../../../../proto/demeter/ops/v1alpha/project_pb'; // proto import: "proto/demeter/ops/v1alpha/project.proto"


export class ProjectServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorFetchProjects = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/FetchProjects',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectsRequest,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectsResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.FetchProjectsRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.FetchProjectsResponse.deserializeBinary
  );

  fetchProjects(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.FetchProjectsResponse>;

  fetchProjects(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectsResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.FetchProjectsResponse>;

  fetchProjects(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/FetchProjects',
        request,
        metadata || {},
        this.methodDescriptorFetchProjects,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/FetchProjects',
    request,
    metadata || {},
    this.methodDescriptorFetchProjects);
  }

  methodDescriptorFetchProjectById = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/FetchProjectById',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdRequest,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdResponse.deserializeBinary
  );

  fetchProjectById(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdResponse>;

  fetchProjectById(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdResponse>;

  fetchProjectById(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectByIdResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/FetchProjectById',
        request,
        metadata || {},
        this.methodDescriptorFetchProjectById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/FetchProjectById',
    request,
    metadata || {},
    this.methodDescriptorFetchProjectById);
  }

  methodDescriptorFetchProjectByNamespace = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/FetchProjectByNamespace',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceRequest,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceResponse.deserializeBinary
  );

  fetchProjectByNamespace(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceResponse>;

  fetchProjectByNamespace(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceResponse>;

  fetchProjectByNamespace(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectByNamespaceResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/FetchProjectByNamespace',
        request,
        metadata || {},
        this.methodDescriptorFetchProjectByNamespace,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/FetchProjectByNamespace',
    request,
    metadata || {},
    this.methodDescriptorFetchProjectByNamespace);
  }

  methodDescriptorCreateProject = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/CreateProject',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.CreateProjectRequest,
    proto_demeter_ops_v1alpha_project_pb.CreateProjectResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.CreateProjectRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.CreateProjectResponse.deserializeBinary
  );

  createProject(
    request: proto_demeter_ops_v1alpha_project_pb.CreateProjectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.CreateProjectResponse>;

  createProject(
    request: proto_demeter_ops_v1alpha_project_pb.CreateProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.CreateProjectResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.CreateProjectResponse>;

  createProject(
    request: proto_demeter_ops_v1alpha_project_pb.CreateProjectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.CreateProjectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/CreateProject',
        request,
        metadata || {},
        this.methodDescriptorCreateProject,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/CreateProject',
    request,
    metadata || {},
    this.methodDescriptorCreateProject);
  }

  methodDescriptorUpdateProject = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/UpdateProject',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.UpdateProjectRequest,
    proto_demeter_ops_v1alpha_project_pb.UpdateProjectResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.UpdateProjectRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.UpdateProjectResponse.deserializeBinary
  );

  updateProject(
    request: proto_demeter_ops_v1alpha_project_pb.UpdateProjectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.UpdateProjectResponse>;

  updateProject(
    request: proto_demeter_ops_v1alpha_project_pb.UpdateProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.UpdateProjectResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.UpdateProjectResponse>;

  updateProject(
    request: proto_demeter_ops_v1alpha_project_pb.UpdateProjectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.UpdateProjectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/UpdateProject',
        request,
        metadata || {},
        this.methodDescriptorUpdateProject,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/UpdateProject',
    request,
    metadata || {},
    this.methodDescriptorUpdateProject);
  }

  methodDescriptorDeleteProject = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/DeleteProject',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectRequest,
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectResponse.deserializeBinary
  );

  deleteProject(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.DeleteProjectResponse>;

  deleteProject(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.DeleteProjectResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.DeleteProjectResponse>;

  deleteProject(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.DeleteProjectResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/DeleteProject',
        request,
        metadata || {},
        this.methodDescriptorDeleteProject,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/DeleteProject',
    request,
    metadata || {},
    this.methodDescriptorDeleteProject);
  }

  methodDescriptorFetchProjectSecrets = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/FetchProjectSecrets',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsRequest,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsResponse.deserializeBinary
  );

  fetchProjectSecrets(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsResponse>;

  fetchProjectSecrets(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsResponse>;

  fetchProjectSecrets(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectSecretsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/FetchProjectSecrets',
        request,
        metadata || {},
        this.methodDescriptorFetchProjectSecrets,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/FetchProjectSecrets',
    request,
    metadata || {},
    this.methodDescriptorFetchProjectSecrets);
  }

  methodDescriptorCreateProjectSecret = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/CreateProjectSecret',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretRequest,
    proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretResponse.deserializeBinary
  );

  createProjectSecret(
    request: proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretResponse>;

  createProjectSecret(
    request: proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretResponse>;

  createProjectSecret(
    request: proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.CreateProjectSecretResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/CreateProjectSecret',
        request,
        metadata || {},
        this.methodDescriptorCreateProjectSecret,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/CreateProjectSecret',
    request,
    metadata || {},
    this.methodDescriptorCreateProjectSecret);
  }

  methodDescriptorDeleteProjectSecret = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/DeleteProjectSecret',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretRequest,
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretResponse.deserializeBinary
  );

  deleteProjectSecret(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretResponse>;

  deleteProjectSecret(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretResponse>;

  deleteProjectSecret(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.DeleteProjectSecretResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/DeleteProjectSecret',
        request,
        metadata || {},
        this.methodDescriptorDeleteProjectSecret,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/DeleteProjectSecret',
    request,
    metadata || {},
    this.methodDescriptorDeleteProjectSecret);
  }

  methodDescriptorFetchProjectUsers = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/FetchProjectUsers',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersRequest,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersResponse.deserializeBinary
  );

  fetchProjectUsers(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersResponse>;

  fetchProjectUsers(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersResponse>;

  fetchProjectUsers(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectUsersResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/FetchProjectUsers',
        request,
        metadata || {},
        this.methodDescriptorFetchProjectUsers,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/FetchProjectUsers',
    request,
    metadata || {},
    this.methodDescriptorFetchProjectUsers);
  }

  methodDescriptorFetchMeProjectUser = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/FetchMeProjectUser',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserRequest,
    proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserResponse.deserializeBinary
  );

  fetchMeProjectUser(
    request: proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserResponse>;

  fetchMeProjectUser(
    request: proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserResponse>;

  fetchMeProjectUser(
    request: proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchMeProjectUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/FetchMeProjectUser',
        request,
        metadata || {},
        this.methodDescriptorFetchMeProjectUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/FetchMeProjectUser',
    request,
    metadata || {},
    this.methodDescriptorFetchMeProjectUser);
  }

  methodDescriptorDeleteProjectUser = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/DeleteProjectUser',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserRequest,
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserResponse.deserializeBinary
  );

  deleteProjectUser(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserResponse>;

  deleteProjectUser(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserResponse>;

  deleteProjectUser(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/DeleteProjectUser',
        request,
        metadata || {},
        this.methodDescriptorDeleteProjectUser,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/DeleteProjectUser',
    request,
    metadata || {},
    this.methodDescriptorDeleteProjectUser);
  }

  methodDescriptorFetchProjectUserInvites = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/FetchProjectUserInvites',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesRequest,
    proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesResponse.deserializeBinary
  );

  fetchProjectUserInvites(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesResponse>;

  fetchProjectUserInvites(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesResponse>;

  fetchProjectUserInvites(
    request: proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.FetchProjectUserInvitesResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/FetchProjectUserInvites',
        request,
        metadata || {},
        this.methodDescriptorFetchProjectUserInvites,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/FetchProjectUserInvites',
    request,
    metadata || {},
    this.methodDescriptorFetchProjectUserInvites);
  }

  methodDescriptorCreateProjectUserInvite = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/CreateProjectUserInvite',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteRequest,
    proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteResponse.deserializeBinary
  );

  createProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteResponse>;

  createProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteResponse>;

  createProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.CreateProjectUserInviteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/CreateProjectUserInvite',
        request,
        metadata || {},
        this.methodDescriptorCreateProjectUserInvite,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/CreateProjectUserInvite',
    request,
    metadata || {},
    this.methodDescriptorCreateProjectUserInvite);
  }

  methodDescriptorAcceptProjectUserInvite = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/AcceptProjectUserInvite',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteRequest,
    proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteResponse.deserializeBinary
  );

  acceptProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteResponse>;

  acceptProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteResponse>;

  acceptProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.AcceptProjectUserInviteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/AcceptProjectUserInvite',
        request,
        metadata || {},
        this.methodDescriptorAcceptProjectUserInvite,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/AcceptProjectUserInvite',
    request,
    metadata || {},
    this.methodDescriptorAcceptProjectUserInvite);
  }

  methodDescriptorResendProjectUserInvite = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/ResendProjectUserInvite',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteRequest,
    proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteResponse.deserializeBinary
  );

  resendProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteResponse>;

  resendProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteResponse>;

  resendProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.ResendProjectUserInviteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/ResendProjectUserInvite',
        request,
        metadata || {},
        this.methodDescriptorResendProjectUserInvite,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/ResendProjectUserInvite',
    request,
    metadata || {},
    this.methodDescriptorResendProjectUserInvite);
  }

  methodDescriptorDeleteProjectUserInvite = new grpcWeb.MethodDescriptor(
    '/demeter.ops.v1alpha.ProjectService/DeleteProjectUserInvite',
    grpcWeb.MethodType.UNARY,
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteRequest,
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteResponse,
    (request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteRequest) => {
      return request.serializeBinary();
    },
    proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteResponse.deserializeBinary
  );

  deleteProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteRequest,
    metadata?: grpcWeb.Metadata | null): Promise<proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteResponse>;

  deleteProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteResponse) => void): grpcWeb.ClientReadableStream<proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteResponse>;

  deleteProjectUserInvite(
    request: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: proto_demeter_ops_v1alpha_project_pb.DeleteProjectUserInviteResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/demeter.ops.v1alpha.ProjectService/DeleteProjectUserInvite',
        request,
        metadata || {},
        this.methodDescriptorDeleteProjectUserInvite,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/demeter.ops.v1alpha.ProjectService/DeleteProjectUserInvite',
    request,
    metadata || {},
    this.methodDescriptorDeleteProjectUserInvite);
  }

}

