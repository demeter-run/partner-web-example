// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "proto/demeter/ops/v1alpha/resource.proto" (package "demeter.ops.v1alpha", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ResourceService } from "./resource";
import type { DeleteResourceResponse } from "./resource";
import type { DeleteResourceRequest } from "./resource";
import type { UpdateResourceResponse } from "./resource";
import type { UpdateResourceRequest } from "./resource";
import type { CreateResourceResponse } from "./resource";
import type { CreateResourceRequest } from "./resource";
import type { FetchResourcesByIdResponse } from "./resource";
import type { FetchResourcesByIdRequest } from "./resource";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { FetchResourcesResponse } from "./resource";
import type { FetchResourcesRequest } from "./resource";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service demeter.ops.v1alpha.ResourceService
 */
export interface IResourceServiceClient {
    /**
     * @generated from protobuf rpc: FetchResources
     */
    fetchResources(input: FetchResourcesRequest, options?: RpcOptions): UnaryCall<FetchResourcesRequest, FetchResourcesResponse>;
    /**
     * @generated from protobuf rpc: FetchResourcesById
     */
    fetchResourcesById(input: FetchResourcesByIdRequest, options?: RpcOptions): UnaryCall<FetchResourcesByIdRequest, FetchResourcesByIdResponse>;
    /**
     * @generated from protobuf rpc: CreateResource
     */
    createResource(input: CreateResourceRequest, options?: RpcOptions): UnaryCall<CreateResourceRequest, CreateResourceResponse>;
    /**
     * @generated from protobuf rpc: UpdateResource
     */
    updateResource(input: UpdateResourceRequest, options?: RpcOptions): UnaryCall<UpdateResourceRequest, UpdateResourceResponse>;
    /**
     * @generated from protobuf rpc: DeleteResource
     */
    deleteResource(input: DeleteResourceRequest, options?: RpcOptions): UnaryCall<DeleteResourceRequest, DeleteResourceResponse>;
}
/**
 * @generated from protobuf service demeter.ops.v1alpha.ResourceService
 */
export class ResourceServiceClient implements IResourceServiceClient, ServiceInfo {
    typeName = ResourceService.typeName;
    methods = ResourceService.methods;
    options = ResourceService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: FetchResources
     */
    fetchResources(input: FetchResourcesRequest, options?: RpcOptions): UnaryCall<FetchResourcesRequest, FetchResourcesResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<FetchResourcesRequest, FetchResourcesResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: FetchResourcesById
     */
    fetchResourcesById(input: FetchResourcesByIdRequest, options?: RpcOptions): UnaryCall<FetchResourcesByIdRequest, FetchResourcesByIdResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<FetchResourcesByIdRequest, FetchResourcesByIdResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateResource
     */
    createResource(input: CreateResourceRequest, options?: RpcOptions): UnaryCall<CreateResourceRequest, CreateResourceResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateResourceRequest, CreateResourceResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateResource
     */
    updateResource(input: UpdateResourceRequest, options?: RpcOptions): UnaryCall<UpdateResourceRequest, UpdateResourceResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<UpdateResourceRequest, UpdateResourceResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteResource
     */
    deleteResource(input: DeleteResourceRequest, options?: RpcOptions): UnaryCall<DeleteResourceRequest, DeleteResourceResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<DeleteResourceRequest, DeleteResourceResponse>("unary", this._transport, method, opt, input);
    }
}
